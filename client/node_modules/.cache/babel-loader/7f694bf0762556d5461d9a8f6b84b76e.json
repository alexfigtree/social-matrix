{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js\";\nimport React, { useState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\nimport * as questionData from './QuestionData';\n\nlet admins = require('./QuestionData.js');\n\nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [checked, setChecked] = React.useState(true);\n  console.log('did i import correctly', admins[0]);\n  /*  const selectData = (id, event) => {\n      console.log(\"hey this is checked\", event.target.checked);\n      console.log(\"with value\", event.target.value);\n        let isSelected = event.currentTarget.checked;\n        if (isSelected) {\n          if (this.state.currentData < this.state.limit) {\n            this.setState({ currentData: this.state.currentData+1 });\n          }else{\n            event.preventDefault()\n            event.currentTarget.checked = false;\n          }\n        } else {\n          this.setState({currentData: this.state.currentData - 1});\n        };\n  \n        setChecked(event.target.checked);\n    }*/\n\n  const questionNumber = \"inlineCheckbox1.2\";\n\n  const handleChange = event => {\n    console.log(\"hey this is checked, id\", event.target.id);\n    console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-1\",\n    label: \"1=(most privileged)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"1\" //onCheck={this.handleCheck}\n    //checked={checked}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-2\",\n    label: \"2\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"2\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-3\",\n    label: \"3\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"3\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-4\",\n    label: \"4\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"4\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-5\",\n    label: \"5\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"5\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-6\",\n    label: \"6\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"6\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-7\",\n    label: \"7=(Most marginalized)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"7\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }));\n}\n\n;\nexport default CheckboxField;","map":{"version":3,"sources":["/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js"],"names":["React","useState","FormGroup","Checkbox","questionData","admins","require","CheckboxField","props","currentData","setCurrentData","limit","setLimit","checked","setChecked","console","log","questionNumber","handleChange","event","target","id","value","flexDirection","fill"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\nimport * as questionData from './QuestionData';\n\nlet admins = require('./QuestionData.js'); \nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [checked, setChecked] = React.useState(true);\n  console.log('did i import correctly', admins[0]);\n\n/*  const selectData = (id, event) => {\n    console.log(\"hey this is checked\", event.target.checked);\n    console.log(\"with value\", event.target.value);\n      let isSelected = event.currentTarget.checked;\n      if (isSelected) {\n        if (this.state.currentData < this.state.limit) {\n          this.setState({ currentData: this.state.currentData+1 });\n        }else{\n          event.preventDefault()\n          event.currentTarget.checked = false;\n        }\n      } else {\n        this.setState({currentData: this.state.currentData - 1});\n      };\n\n      setChecked(event.target.checked);\n  }*/\n\n  const questionNumber = \"inlineCheckbox1.2\";\n  const handleChange = (event) => {\n    console.log(\"hey this is checked, id\", event.target.id);\n\n    console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked);\n  };\n    return (\n\n      <FormGroup style={{flexDirection: 'row'}}>\n          <Checkbox\n            id={questionNumber+\"-1\"}\n            label='1=(most privileged)'\n            iconstyle={{fill: '#000'}}\n            value='1'\n            //onCheck={this.handleCheck}\n            //checked={checked}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-2\"}\n            label='2'\n            iconstyle={{fill: '#000'}}\n            value='2'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-3\"}\n            label='3'\n            iconstyle={{fill: '#000'}}\n            value='3'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-4\"}\n            label='4'\n            iconstyle={{fill: '#000'}}\n            value='4'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-5\"}\n            label='5'\n            iconstyle={{fill: '#000'}}\n            value='5'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-6\"}\n            label='6'\n            iconstyle={{fill: '#000'}}\n            value='6'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-7\"}\n            label='7=(Most marginalized)'\n            iconstyle={{fill: '#000'}}\n            value='7'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n        </FormGroup>\n    );\n};\n\nexport default CheckboxField;"]},"metadata":{},"sourceType":"module"}