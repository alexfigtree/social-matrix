{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js\";\nimport React, { useState, setState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\n\nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [checked, setChecked] = React.useState(true);\n\n  const selectData = event => {\n    console.log(\"hey this is checked\", event);\n    console.log(\"with value\", event.target.value);\n    let isSelected = event.currentTarget.checked;\n\n    if (isSelected) {\n      if (currentData < limit) {\n        setState({\n          currentData: currentData + 1\n        });\n      } else {\n        event.preventDefault();\n        event.currentTarget.checked = false;\n      }\n    } else {\n      setState({\n        currentData: currentData - 1\n      });\n    }\n\n    ;\n    setChecked(event.target.checked);\n  };\n  /*  const selectData = React.useCallback(\n      (event) => {\n        console.log(\"hey this is checked\", event.target.checked);\n        console.log(\"with value\", event.target.value);\n        let isSelected = event.currentTarget.checked;\n        if (isSelected) {\n          if (currentData < limit) {\n            setState({ currentData: currentData+1 });\n          }else{\n            event.preventDefault()\n            event.currentTarget.checked = false;\n          }\n        } else {\n          setState({currentData: currentData - 1});\n        };\n  \n        setChecked(event.target.checked);\n      },\n      [], // Tells React to memoize regardless of arguments.\n    );*/\n\n\n  const shouldDisableCheckbox = (value, checked) => {\n    // either from props: const { maxAllowed } = this.props\n    // or from state: const { maxAllowed } = this.state\n    // or just a constant:\n    console.log('shouldDisableCheckbox called with checked value of', checked); //const value = event.target.value;\n\n    const maxAllowed = 2; //const { checked } = React.useState(true);\n\n    return checked.length >= maxAllowed && checked.indexOf(value) === -1;\n  };\n\n  const handleChange = event => {\n    console.log(\"hey this is checked\", event.target.checked);\n    console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"1=(most privileged)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"1\" //checked={checked.indexOf('1') !== -1}\n    ,\n    tabIndex: -1 //disabled={shouldDisableCheckbox(value, checked)}\n    //onCheck={this.handleCheck}\n    ,\n    checked: checked //checked={currentData.indexOf()>=0}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"2\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"2\" //checked={checked.indexOf() !== -1}\n    ,\n    tabIndex: -1,\n    checked: checked //disabled={shouldDisableCheckbox(checked)}\n    //onCheck={this.handleCheck}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"3\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"3\" //checked={checked.indexOf() !== -1}\n    ,\n    tabIndex: -1,\n    checked: checked //disabled={shouldDisableCheckbox(checked)}\n    //onCheck={this.handleCheck}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: handleChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"4\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"4\",\n    checked: checked //checked={checked.indexOf() !== -1}\n    ,\n    tabIndex: -1 //disabled={shouldDisableCheckbox(checked)}\n    //onCheck={this.handleCheck}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: handleChange(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"5\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"5\",\n    checked: checked //onCheck={this.handleCheck}\n    //disabled={shouldDisableCheckbox(checked)}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: selectData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"6\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"6\",\n    checked: checked //onCheck={this.handleCheck}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: selectData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"7=(Most marginalized)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"7\",\n    checked: checked //onCheck={this.handleCheck}\n    //checked={currentData.indexOf()>=0}\n    ,\n    onChange: selectData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }));\n}\n\n;\nexport default CheckboxField;","map":{"version":3,"sources":["/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js"],"names":["React","useState","setState","FormGroup","Checkbox","CheckboxField","props","currentData","setCurrentData","limit","setLimit","checked","setChecked","selectData","event","console","log","target","value","isSelected","currentTarget","preventDefault","shouldDisableCheckbox","maxAllowed","length","indexOf","handleChange","flexDirection","fill"],"mappings":"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","sourcesContent":["import React, { useState, setState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\n\nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [checked, setChecked] = React.useState(true);\n\n  const selectData = (event) => {\n      console.log(\"hey this is checked\", event);\n      console.log(\"with value\", event.target.value);\n      let isSelected = event.currentTarget.checked;\n      if (isSelected) {\n        if (currentData < limit) {\n          setState({ currentData: currentData+1 });\n        }else{\n          event.preventDefault()\n          event.currentTarget.checked = false;\n        }\n      } else {\n        setState({currentData: currentData - 1});\n      };\n\n      setChecked(event.target.checked);\n  }\n\n/*  const selectData = React.useCallback(\n    (event) => {\n      console.log(\"hey this is checked\", event.target.checked);\n      console.log(\"with value\", event.target.value);\n      let isSelected = event.currentTarget.checked;\n      if (isSelected) {\n        if (currentData < limit) {\n          setState({ currentData: currentData+1 });\n        }else{\n          event.preventDefault()\n          event.currentTarget.checked = false;\n        }\n      } else {\n        setState({currentData: currentData - 1});\n      };\n\n      setChecked(event.target.checked);\n    },\n    [], // Tells React to memoize regardless of arguments.\n  );*/\n\n  const shouldDisableCheckbox = (value, checked) => {\n   // either from props: const { maxAllowed } = this.props\n   // or from state: const { maxAllowed } = this.state\n   // or just a constant:\n   console.log('shouldDisableCheckbox called with checked value of', checked);\n   //const value = event.target.value;\n   const maxAllowed = 2;\n   //const { checked } = React.useState(true);\n   return checked.length >= maxAllowed && checked.indexOf(value) === -1\n}\n\n const handleChange = (event) => {\n    console.log(\"hey this is checked\", event.target.checked);\n    console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked);\n  };\n    return (\n\n      <FormGroup style={{flexDirection: 'row'}}>\n          <Checkbox\n            label='1=(most privileged)'\n            iconstyle={{fill: '#000'}}\n            value='1'\n            //checked={checked.indexOf('1') !== -1}\n            tabIndex={-1}\n            //disabled={shouldDisableCheckbox(value, checked)}\n            //onCheck={this.handleCheck}\n            checked={checked}\n            //checked={currentData.indexOf()>=0}\n            onChange={handleChange}\n          />\n          <Checkbox\n            label='2'\n            iconstyle={{fill: '#000'}}\n            value='2'\n            //checked={checked.indexOf() !== -1}\n            tabIndex={-1}\n            checked={checked}\n            //disabled={shouldDisableCheckbox(checked)}\n            //onCheck={this.handleCheck}\n            //checked={currentData.indexOf()>=0}\n            onChange={handleChange}\n          />\n          <Checkbox\n            label='3'\n            iconstyle={{fill: '#000'}}\n            value='3'\n            //checked={checked.indexOf() !== -1}\n            tabIndex={-1}\n            checked={checked}\n            //disabled={shouldDisableCheckbox(checked)}\n            //onCheck={this.handleCheck}\n            //checked={currentData.indexOf()>=0}\n            onChange={handleChange()}\n          />\n          <Checkbox\n            label='4'\n            iconstyle={{fill: '#000'}}\n            value='4'\n            checked={checked}\n            //checked={checked.indexOf() !== -1}\n            tabIndex={-1}\n            //disabled={shouldDisableCheckbox(checked)}\n            //onCheck={this.handleCheck}\n            //checked={currentData.indexOf()>=0}\n            onChange={handleChange()}\n          />\n          <Checkbox\n            label='5'\n            iconstyle={{fill: '#000'}}\n            value='5'\n            checked={checked}\n            //onCheck={this.handleCheck}\n            //disabled={shouldDisableCheckbox(checked)}\n            //checked={currentData.indexOf()>=0}\n            onChange={selectData()}\n          />\n          <Checkbox\n            label='6'\n            iconstyle={{fill: '#000'}}\n            value='6'\n            checked={checked}\n            //onCheck={this.handleCheck}\n            //checked={currentData.indexOf()>=0}\n            onChange={selectData()}\n          />\n          <Checkbox\n            label='7=(Most marginalized)'\n            iconstyle={{fill: '#000'}}\n            value='7'\n            checked={checked}\n            //onCheck={this.handleCheck}\n            //checked={currentData.indexOf()>=0}\n            onChange={selectData()}\n          />\n        </FormGroup>\n    );\n};\n\nexport default CheckboxField;"]},"metadata":{},"sourceType":"module"}