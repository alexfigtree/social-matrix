{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js\";\nimport React, { useState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\nimport questionData from './QuestionData';\n\nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [data, setData] = React.useState(questionData[0][0]);\n  const [checked, setChecked] = React.useState(true); //console.log('questionDatadid i import correctly', questionData[0]);\n\n  /*  const selectData = (id, event) => {\n      console.log(\"hey this is checked\", event.target.checked);\n      console.log(\"with value\", event.target.value);\n        let isSelected = event.currentTarget.checked;\n        if (isSelected) {\n          if (this.state.currentData < this.state.limit) {\n            this.setState({ currentData: this.state.currentData+1 });\n          }else{\n            event.preventDefault()\n            event.currentTarget.checked = false;\n          }\n        } else {\n          this.setState({currentData: this.state.currentData - 1});\n        };\n  \n        setChecked(event.target.checked);\n    }*/\n\n  const questionNumber = \"inlineCheckbox1.2\";\n\n  const handleChange = async event => {\n    //console.log(\"hey this is checked, id\", event.target.id);\n    //console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked); //update data:\n\n    if (event.target.checked) {\n      //save as first\n      //setData({data[0].value: event.target.value});\n      //console.log('data.value', data.value);\n      //let newValue = ;\n      setData(prevState => {\n        let data = Object.assign({}, prevState.data || data); // creating copy of state variable jasper\n\n        console.log(\"1) WHAT IA THIS TEMP DATA\", data);\n        data.key = 'test';\n        data.value = parseInt(event.target.value);\n        console.log('setting data.value to parseInt(event.target.value)', parseInt(event.target.value)); // update the name property, assign a new value                 \n\n        return {\n          data\n        }; // return new object jasper object\n      });\n    }\n\n    await console.log('data!', data);\n  };\n\n  const test = () => {\n    console.log('get state', data);\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-1\",\n    label: \"1=(most privileged)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"1\" //onCheck={this.handleCheck}\n    //checked={checked}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-2\",\n    label: \"2\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"2\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-3\",\n    label: \"3\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"3\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-4\",\n    label: \"4\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"4\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-5\",\n    label: \"5\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"5\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-6\",\n    label: \"6\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"6\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: questionNumber + \"-7\",\n    label: \"7=(Most marginalized)\",\n    iconstyle: {\n      fill: '#000'\n    },\n    value: \"7\" //onCheck={this.handleCheck}\n    ,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"hey\"));\n}\n\n;\nexport default CheckboxField;","map":{"version":3,"sources":["/Users/alex/Documents/GitHub/social-matrix/client/src/components/Form/CheckboxField.js"],"names":["React","useState","FormGroup","Checkbox","questionData","CheckboxField","props","currentData","setCurrentData","limit","setLimit","data","setData","checked","setChecked","questionNumber","handleChange","event","target","prevState","Object","assign","console","log","key","value","parseInt","test","flexDirection","fill"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FormGroup, Checkbox } from '@material-ui/core';\nimport questionData from './QuestionData';\n\n\nfunction CheckboxField(props) {\n  const [currentData, setCurrentData] = React.useState([]);\n  const [limit, setLimit] = React.useState(2);\n  const [data, setData] = React.useState(questionData[0][0]);\n  const [checked, setChecked] = React.useState(true);\n\n  //console.log('questionDatadid i import correctly', questionData[0]);\n\n/*  const selectData = (id, event) => {\n    console.log(\"hey this is checked\", event.target.checked);\n    console.log(\"with value\", event.target.value);\n      let isSelected = event.currentTarget.checked;\n      if (isSelected) {\n        if (this.state.currentData < this.state.limit) {\n          this.setState({ currentData: this.state.currentData+1 });\n        }else{\n          event.preventDefault()\n          event.currentTarget.checked = false;\n        }\n      } else {\n        this.setState({currentData: this.state.currentData - 1});\n      };\n\n      setChecked(event.target.checked);\n  }*/\n\n  const questionNumber = \"inlineCheckbox1.2\";\n  const handleChange = async(event) => {\n    //console.log(\"hey this is checked, id\", event.target.id);\n\n    //console.log(\"with value\", event.target.value);\n    setChecked(event.target.checked);\n    //update data:\n    if(event.target.checked){\n      //save as first\n      //setData({data[0].value: event.target.value});\n      //console.log('data.value', data.value);\n      //let newValue = ;\n      setData(prevState => {\n        let data = Object.assign({}, prevState.data || data);  // creating copy of state variable jasper\n        console.log(\"1) WHAT IA THIS TEMP DATA\", data);\n        data.key= 'test';\n        data.value = parseInt(event.target.value);  \n        console.log('setting data.value to parseInt(event.target.value)', parseInt(event.target.value));                   // update the name property, assign a new value                 \n        return { data };                                 // return new object jasper object\n      });\n    }\n    await console.log('data!', data);\n  };\n\n  const test= () => {\n    console.log('get state', data);\n  }\n    return (\n\n      <FormGroup style={{flexDirection: 'row'}}>\n          <Checkbox\n            id={questionNumber+\"-1\"}\n            label='1=(most privileged)'\n            iconstyle={{fill: '#000'}}\n            value='1'\n            //onCheck={this.handleCheck}\n            //checked={checked}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-2\"}\n            label='2'\n            iconstyle={{fill: '#000'}}\n            value='2'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-3\"}\n            label='3'\n            iconstyle={{fill: '#000'}}\n            value='3'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-4\"}\n            label='4'\n            iconstyle={{fill: '#000'}}\n            value='4'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-5\"}\n            label='5'\n            iconstyle={{fill: '#000'}}\n            value='5'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-6\"}\n            label='6'\n            iconstyle={{fill: '#000'}}\n            value='6'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <Checkbox\n            id={questionNumber+\"-7\"}\n            label='7=(Most marginalized)'\n            iconstyle={{fill: '#000'}}\n            value='7'\n            //onCheck={this.handleCheck}\n            onChange={handleChange}\n          />\n          <button onClick={test}>hey</button>\n        </FormGroup>\n        \n    );\n};\n\nexport default CheckboxField;"]},"metadata":{},"sourceType":"module"}